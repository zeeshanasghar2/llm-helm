apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "openwebui-stack.fullname" . }}-openwebui
  labels:
    {{- include "openwebui-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: openwebui
spec:
  replicas: {{ .Values.openwebui.replicaCount }}
  selector:
    matchLabels:
      {{- include "openwebui-stack.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: openwebui
  template:
    metadata:
      labels:
        {{- include "openwebui-stack.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: openwebui
    spec:
      containers:
        - name: openwebui
          image: "{{ .Values.openwebui.image.repository }}:{{ .Values.openwebui.image.tag }}"
          ports:
            - containerPort: 8080
          env:
            {{- if .Values.litellm.enabled }}
            - name: OPENAI_API_BASE_URL
              value: "http://{{ include "openwebui-stack.fullname" . }}-litellm:{{ .Values.litellm.service.port }}"
            - name: OPENAI_API_KEY
              value: "$(cat /mnt/secrets-store/LITELLM_MASTER_KEY)"
            {{- else }}
            - name: OLLAMA_BASE_URL
              value: "http://{{ include "openwebui-stack.fullname" . }}-ollama:{{ .Values.ollama.service.port }}"
            {{- end }}
            - name: WEBUI_DB_URL
              value: "postgresql+psycopg://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)"
            - name: POSTGRES_USER
              value: "$(cat /mnt/secrets-store/POSTGRES_USER)"
            - name: POSTGRES_PASSWORD
              value: "$(cat /mnt/secrets-store/POSTGRES_PASSWORD)"
            - name: POSTGRES_HOST
              value: "$(cat /mnt/secrets-store/POSTGRES_HOST)"
            - name: POSTGRES_PORT
              value: "$(cat /mnt/secrets-store/POSTGRES_PORT)"
            - name: POSTGRES_DB
              value: "$(cat /mnt/secrets-store/POSTGRES_DB)"
            - name: WEBUI_SECRET_KEY
              value: "$(cat /mnt/secrets-store/WEBUI_SECRET_KEY)"
          volumeMounts:
            - name: secrets-store-inline
              mountPath: "/mnt/secrets-store"
              readOnly: true
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: {{ .Values.openwebui.probes.initialDelaySeconds }}
            periodSeconds: {{ .Values.openwebui.probes.periodSeconds }}
            timeoutSeconds: {{ .Values.openwebui.probes.timeoutSeconds }}
            failureThreshold: {{ .Values.openwebui.probes.failureThreshold }}
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: {{ .Values.openwebui.probes.initialDelaySeconds }}
            periodSeconds: {{ .Values.openwebui.probes.periodSeconds }}
            timeoutSeconds: {{ .Values.openwebui.probes.timeoutSeconds }}
            failureThreshold: {{ .Values.openwebui.probes.failureThreshold }}
          resources:
            {{- toYaml .Values.openwebui.resources | nindent 12 }}
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "azure-kv-secrets"